/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E2AP-PDU-Descriptions"
 * 	found in "Spec/e2ap-v031ex.asn"
 * 	`asn1c -fcompound-names -fno-include-deps -findirect-choice -gen-PER`
 */

#ifndef	_SuccessfulOutcomeE2_H_
#define	_SuccessfulOutcomeE2_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ProcedureCode.h"
#include "Criticality.h"
#include <ANY.h>
#include <asn_ioc.h>
#include "RICsubscriptionRequest.h"
#include "RICsubscriptionResponse.h"
#include "RICsubscriptionFailure.h"
#include "RICsubscriptionDeleteRequest.h"
#include "RICsubscriptionDeleteResponse.h"
#include "RICsubscriptionDeleteFailure.h"
#include "RICserviceUpdate.h"
#include "RICserviceUpdateAcknowledge.h"
#include "RICserviceUpdateFailure.h"
#include "RICcontrolRequest.h"
#include "RICcontrolAcknowledge.h"
#include "RICcontrolFailure.h"
#include "RICindication.h"
#include "RICserviceQuery.h"
#include <OPEN_TYPE.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SuccessfulOutcomeE2__value_PR {
	SuccessfulOutcomeE2__value_PR_NOTHING,	/* No components present */
	SuccessfulOutcomeE2__value_PR_RICsubscriptionResponse,
	SuccessfulOutcomeE2__value_PR_RICsubscriptionDeleteResponse,
	SuccessfulOutcomeE2__value_PR_RICserviceUpdateAcknowledge,
	SuccessfulOutcomeE2__value_PR_RICcontrolAcknowledge
} SuccessfulOutcomeE2__value_PR;

/* SuccessfulOutcomeE2 */
typedef struct SuccessfulOutcomeE2 {
	ProcedureCode_t	 procedureCode;
	Criticality_t	 criticality;
	struct SuccessfulOutcomeE2__value {
		SuccessfulOutcomeE2__value_PR present;
		union SuccessfulOutcomeE2__value_u {
			RICsubscriptionResponse_t	 RICsubscriptionResponse;
			RICsubscriptionDeleteResponse_t	 RICsubscriptionDeleteResponse;
			RICserviceUpdateAcknowledge_t	 RICserviceUpdateAcknowledge;
			RICcontrolAcknowledge_t	 RICcontrolAcknowledge;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} value;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SuccessfulOutcomeE2_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SuccessfulOutcomeE2;
extern asn_SEQUENCE_specifics_t asn_SPC_SuccessfulOutcomeE2_specs_1;
extern asn_TYPE_member_t asn_MBR_SuccessfulOutcomeE2_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _SuccessfulOutcomeE2_H_ */
#include <asn_internal.h>
