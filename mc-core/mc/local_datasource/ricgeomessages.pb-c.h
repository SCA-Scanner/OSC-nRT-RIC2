/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ricgeomessages.proto */

#ifndef PROTOBUF_C_ricgeomessages_2eproto__INCLUDED
#define PROTOBUF_C_ricgeomessages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "ricgeomessages_pcmdreport.pb-c.h"

typedef struct _GeoHdr GeoHdr;
typedef struct _GeoMsg GeoMsg;


/* --- enums --- */

typedef enum _GeoMsg__Types {
  GEO_MSG__TYPES__PCMDREPORT = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GEO_MSG__TYPES)
} GeoMsg__Types;

/* --- messages --- */

struct  _GeoHdr
{
  ProtobufCMessage base;
  uint64_t sequencenumber;
  uint64_t timestamp;
  uint32_t eci;
  uint32_t plmn;
  uint64_t eutrantraceid;
  uint32_t crnti;
};
#define GEO_HDR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&geo_hdr__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


typedef enum {
  GEO_MSG__GEO_MSG_ONEOF__NOT_SET = 0,
  GEO_MSG__GEO_MSG_ONEOF_REPORT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GEO_MSG__GEO_MSG_ONEOF)
} GeoMsg__GeoMsgOneofCase;

struct  _GeoMsg
{
  ProtobufCMessage base;
  GeoMsg__Types type;
  GeoHdr *hdr;
  GeoMsg__GeoMsgOneofCase geo_msg_oneof_case;
  union {
    PcmdReport *report;
  };
};
#define GEO_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&geo_msg__descriptor) \
    , GEO_MSG__TYPES__PCMDREPORT, NULL, GEO_MSG__GEO_MSG_ONEOF__NOT_SET, {0} }


/* GeoHdr methods */
void   geo_hdr__init
                     (GeoHdr         *message);
size_t geo_hdr__get_packed_size
                     (const GeoHdr   *message);
size_t geo_hdr__pack
                     (const GeoHdr   *message,
                      uint8_t             *out);
size_t geo_hdr__pack_to_buffer
                     (const GeoHdr   *message,
                      ProtobufCBuffer     *buffer);
GeoHdr *
       geo_hdr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   geo_hdr__free_unpacked
                     (GeoHdr *message,
                      ProtobufCAllocator *allocator);
/* GeoMsg methods */
void   geo_msg__init
                     (GeoMsg         *message);
size_t geo_msg__get_packed_size
                     (const GeoMsg   *message);
size_t geo_msg__pack
                     (const GeoMsg   *message,
                      uint8_t             *out);
size_t geo_msg__pack_to_buffer
                     (const GeoMsg   *message,
                      ProtobufCBuffer     *buffer);
GeoMsg *
       geo_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   geo_msg__free_unpacked
                     (GeoMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*GeoHdr_Closure)
                 (const GeoHdr *message,
                  void *closure_data);
typedef void (*GeoMsg_Closure)
                 (const GeoMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor geo_hdr__descriptor;
extern const ProtobufCMessageDescriptor geo_msg__descriptor;
extern const ProtobufCEnumDescriptor    geo_msg__types__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ricgeomessages_2eproto__INCLUDED */
