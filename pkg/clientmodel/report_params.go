// Code generated by go-swagger; DO NOT EDIT.

package clientmodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReportParams report params
// swagger:model ReportParams
type ReportParams struct {

	// event triggers
	// Required: true
	EventTriggers EventTriggerList `json:"EventTriggers"`

	// requestor Id
	// Required: true
	RequestorID *int64 `json:"RequestorId"`
}

// Validate validates this report params
func (m *ReportParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventTriggers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestorID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportParams) validateEventTriggers(formats strfmt.Registry) error {

	if err := validate.Required("EventTriggers", "body", m.EventTriggers); err != nil {
		return err
	}

	if err := m.EventTriggers.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("EventTriggers")
		}
		return err
	}

	return nil
}

func (m *ReportParams) validateRequestorID(formats strfmt.Registry) error {

	if err := validate.Required("RequestorId", "body", m.RequestorID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReportParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportParams) UnmarshalBinary(b []byte) error {
	var res ReportParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
