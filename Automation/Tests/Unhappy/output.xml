<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20190730 12:12:15.455" rpa="false">
<suite id="s1" name="Setup failure" source="/home/ubuntu/PycharmProjects/Oran/Unhappy/Setup_failure.robot">
<kw name="Start dockers" type="setup">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${run_script}</arg>
</arguments>
<msg timestamp="20190730 12:12:16.856" level="INFO">Running command '/home/ubuntu/run.sh 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20190730 12:12:16.836" endtime="20190730 12:12:39.116"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${docker_command}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 12:12:39.119" level="INFO">Running command 'docker ps | grep snapshot | wc --lines 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 12:12:39.175" level="INFO">${result} = (0, '4')</msg>
<status status="PASS" starttime="20190730 12:12:39.116" endtime="20190730 12:12:39.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${result[1]}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:39.175" endtime="20190730 12:12:39.176"></status>
</kw>
<status status="PASS" starttime="20190730 12:12:16.836" endtime="20190730 12:12:39.176"></status>
</kw>
<test id="s1-t1" name="Post Request setup node b x2-setup - setup failure">
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${header}</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:39.177" endtime="20190730 12:12:39.178"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/v1/nodeb/x2-setup</arg>
<arg>${json}</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:39.178" endtime="20190730 12:12:39.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190730 12:12:40.266" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 12:12:39.265" endtime="20190730 12:12:40.266"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/v1/nodeb/x2-setup</arg>
<arg>${json}</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:40.268" endtime="20190730 12:12:40.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190730 12:12:41.278" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 12:12:40.277" endtime="20190730 12:12:41.278"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/v1/nodeb/test1</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:41.278" endtime="20190730 12:12:41.293"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:41.293" endtime="20190730 12:12:41.295"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body connectionStatus</arg>
<arg>CONNECTED_SETUP_FAILED</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:41.296" endtime="20190730 12:12:41.296"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body failureType</arg>
<arg>X2_SETUP_FAILURE</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:41.297" endtime="20190730 12:12:41.297"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body setupFailure networkLayerCause</arg>
<arg>HO_TARGET_NOT_ALLOWED</arg>
</arguments>
<status status="PASS" starttime="20190730 12:12:41.297" endtime="20190730 12:12:41.298"></status>
</kw>
<status status="PASS" starttime="20190730 12:12:39.176" endtime="20190730 12:12:41.298" critical="yes"></status>
</test>
<status status="PASS" starttime="20190730 12:12:15.463" endtime="20190730 12:12:41.302"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Setup failure">Setup failure</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
